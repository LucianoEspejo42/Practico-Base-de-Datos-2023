/* 1. Correo y nombre de todas las personas. */

πCorreo, Nom PERS

/* 2. Nombre de los cursos */

πNom CURSO 

/* 3. Cursos (todos los datos) cuya carga horaria sea superior a las 40 horas reloj. */

σ Ch > 40 CURSO

/* 4. Cursos (todos los datos) cuya carga horaria se encuentre entre 40 y 45 horas reloj. */

A = σ Ch ≥ 40 CURSO
B = σ Ch ≤ 45 CURSO
A intersect B

/* 5. Listado de los cursos (nombre renombrar como nombre_curso) junto a los temas que se imparten. */

A = rho nombre_curso ← Nom CURSO
A ⨝ TEMAS

/* 6. Docentes (correo y nombre) que dictan cursos. */

pi Correo (pi Correo (rho Correo ← Correod INSC))

A = pi Nom,Correod INSC
πCorreo,Nom(pi Correo((rho Correo ← Correod A) ⨝ DICTA) ⨝ PERS)

πCorreo,Nom(πCorreo DICTA ⨝ PERS)

/* 7. Temas que se incluyen en todos los cursos. */

TEMAS

/* 8. Listado de los cursos (nombre) junto a los datos del docente que los dicta. */
 
DICTA

/* 9. Docentes (todos los datos) que dictan los cursos “Python I”. */

πCorreo (σNom = 'Python I' DICTA) ⨝ PERS

/* 10. Listado de docentes (correo y nombre) que dictan el curso “Python I” y/o “Python II”. */

A = σNom = 'Python I' DICTA
B = σNom = 'Python II' DICTA
πCorreo,Nom(πCorreo (A union B) ⨝ PERS) 

pi Correo(σ Nom = 'Python I' or Nom = 'Python II' DICTA) ⨝ PERS

/* 11. Docentes (todos los datos) que dictan los cursos “Python I” y “Python II”. */

A = σNom = 'Python I' DICTA
B = σNom = 'Python II' DICTA
A ∩ B

/* 12. Docentes (todos los datos) que cursaron algún curso de verano. */
-- No lo entiendo xd
DICTA
INSC

/* 13. Alumnos (todos los datos) que se inscribieron en el curso “Kotlin I”. */

A = σNom = 'Kotlin I' INSC
(πCorreo A) ⨝ PERS

/* 14. Alumnos (todos los datos) que se inscribieron en el curso “Kotlin II”. */

A = σNom = 'Kotlin II' INSC
(πCorreo A) ⨝ PERS

/* 15. Listado de alumnos (correo) que se inscribieron tanto en el curso “Kotlin I” como “Kotlin II”. */

A = pi Correo(σNom = 'Kotlin I' INSC)
B = pi Correo(σNom = 'Kotlin II' INSC)
A ∩ B

/* 16. Alumnos (todos los datos) que aprobaron el curso “Python I” (se aprueba con nota mayor o igual a 7). */

(πCorreo (σ Nom = 'Python I' and Nota ≥ 7 INSC)) ⨝ PERS

/* 17. Alumnos (todos los datos) que aprobaron el curso “Python II” (se aprueba con nota mayor o igual a 7). */

(πCorreo (σ Nom = 'Python II' and Nota ≥ 7 INSC)) ⨝ PERS

/* 18. Alumnos (todos los datos) que aprobaron el curso “Python I” y “Python II” */

A = πCorreo (σNom = 'Python I' and Nota ≥ 7 INSC)
B = πCorreo (σNom = 'Python II' and Nota ≥ 7 INSC)
(A ∩ B) natural join PERS

/* 19. Alumnos (Correo) que se inscribieron en más de un curso de verano. */

A = rho A INSC
π A.Correo (σA.Correo = INSC.Correo and A.Nom ≠ INSC.Nom (A x INSC))

/* 20. Docentes (todos los datos) que dictan más de un curso cuya carga horaria sea inferior a 30 horas reloj. */

A = (pi Nom (σ Ch < 30 CURSO)) ⨝ DICTA
(πCorreo A) ⨝ PERS

/* 21. Pares de alumnos (correo) que cursaron los mismos cursos. */

A = rho A INSC
πA.Correo(σA.Correo ≠ INSC.Correo and A.Nom = INSC.Nom (A x INSC))

/* 22. Pares de alumnos (todos los datos) que cursaron los mismos cursos. */

A = rho A INSC
πA.Correo(σA.Correo ≠ INSC.Correo and A.Nom = INSC.Nom (A x INSC)) ⨝ PERS

/* 23. Pares de alumnos que cursaron los mismos cursos con distinto profesor. */

A = rho A INSC
σA.Correo ≠ INSC.Correo and A.Nom = INSC.Nom and A.Correod ≠ INSC.Correod (A x INSC)
